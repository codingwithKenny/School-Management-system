exports.id=2657,exports.ids=[2657],exports.modules={61614:(e,s,r)=>{"use strict";r.r(s),r.d(s,{"003f34873f588014a711f06dc57354ba553990c3e4":()=>a.oW,"006339254bbfc4b9b56acd90be012a79cae9236911":()=>a.Ay,"00a96e2edde344d9ac979e6224ec262b65891d79ef":()=>a.yx,"40475b2b8f8319b0846edf5c7cb5e1e728a1089951":()=>a.vW,"4058ec963f03d2831514d001901310ff848301da6d":()=>a._d,"40b804325dd837dc8c225457a67854434aaf6ebee4":()=>a.s5,"40e0f7ef960141ba12217c8aeb1b723184849cd36c":()=>a.jw,"40ed930b2f4f73b84615356d6006f79094f1b36d34":()=>a.wY,"6036f28e7ac49e3d154e7ccf564ded12524660b7a3":()=>a.jt,"6071083769d2f147cdb51e2883975c0db04b0b8539":()=>a.gN,"7012297d5ec348708a0d112445212707293bf72b0d":()=>a.VN,"7f0ddba15a4d1a2b5818152aedeee1babfecfaf880":()=>a.wK,"7f1eb12a3ad3fca310f6993f174cc939657ac976b3":()=>a.qO,"7f2303b054e6e0cb315ec5c1d9aa5d52ec27c8241d":()=>a.LP,"7f313469743f7fd3702663b6525ad8630a911241aa":()=>a.iQ,"7f4c81e4f88a4593557ff73a16dccd36a3c0a43608":()=>t.at,"7f83a0c169bd936e319b22b5fb8e983c6a78b17519":()=>a.Sp,"7f85d83ea367df124ae45e8b7f053eb5c3e03cbbd4":()=>a.kF,"7f8c1ef6216c7eb27919a081231b2719bd1cbd49b7":()=>a.ic,"7fa0377689c74330a9ea93934256badf544a99e045":()=>a.Y0,"7fc1564f9f187f9387f2640b2e72550bbd84045b50":()=>t.ai,"7fce00a2765bdb3126fc558cb3af443cd7608f815e":()=>t.ot,"7fdcbf60fca3f5b6a285da04b3b6d998b7fb8009f3":()=>a.dp,"7fe1331afc087c56e2cdd1483c6d40ec0634d1df29":()=>a.gg,"7ff0ad8b0367d26620e1348595599f94b06fd8d743":()=>a.Fb,"7ff9f4b3c0899f1ff57e9b8920f38fba9736beb4d9":()=>a.jT,"7ffbcf8ec68b2cfdb180be3e72c5e455ffa9f249ff":()=>a.qg});var t=r(40749),a=r(5329)},13895:(e,s,r)=>{"use strict";r.r(s),r.d(s,{"008a7ca980c81f6515d34e48945911d00e5f7e24e0":()=>a.G,"7f622efa3205faf39dde65da00c21142a5fee95a5a":()=>t.y});var t=r(39675),a=r(95638)},52736:(e,s,r)=>{Promise.resolve().then(r.bind(r,39860))},16288:(e,s,r)=>{Promise.resolve().then(r.bind(r,5754))},5754:(e,s,r)=>{"use strict";r.r(s),r.d(s,{default:()=>u});var t=r(45512),a=r(79334),n=r(53896),i=r(45103),d=r(26008),c=r(58009);function l(){let{isLoaded:e,user:s}=(0,n.Jd)(),{signOut:r}=(0,n.ho)(),[l,o]=(0,c.useState)(null),u=(0,a.usePathname)(),f=[{title:"MENU",items:[{icon:"/home.png",label:"Home",href:`/${l}`,visible:["admin","teacher","student","parent"]},{icon:"/subject.png",label:"Subjects",href:"/list/subjects",visible:["admin"]},{icon:"/teacher.png",label:"Teachers",href:"/list/teachers",visible:["admin","teacher"]},{icon:"/student.png",label:"Students",href:"/list/students",visible:["admin","teacher"]},{icon:"/class.png",label:"Classes",href:"/list/classes",visible:["admin","teacher"]},{icon:"/parent.png",label:"Parents",href:"/list/parents",visible:["admin","teacher"],disabled:!0},{icon:"/assignment.png",label:"Result Overview",href:"/list/resultoverview",visible:["admin"]},{icon:"/exam.png",label:"Check Result",href:"/list/checkresult",visible:["student","parent"]},{icon:"/result.png",label:"Results",href:"/list/results",visible:["teacher"]},{icon:"/message.png",label:"Messages",href:"/list/messages",visible:["admin","teacher","student","parent"],disabled:!0},{icon:"/announcement.png",label:"Announcements",href:"/list/announcements",visible:["admin","teacher","student","parent"],disabled:!0}]},{title:"OTHER",items:[{icon:"/profile.png",label:"Profile",href:"/profile",visible:["admin"]},{icon:"/setting.png",label:"Settings",href:"/settings",visible:["admin"]}]}];return e?(0,t.jsxs)("div",{className:"h-full w-64 bg-gradient-to-b from-white to-purple-100 text-xs text-purple-900 font-bold shadow-lg p-4 overflow-y-auto",children:[(0,t.jsxs)("div",{className:"flex flex-col items-center mb-6",children:[(0,t.jsx)(i.default,{src:"/logo.png",alt:"Logo",width:64,height:64,className:"w-10 h-10 sm:w-12 sm:h-12 md:w-16 md:h-16"}),(0,t.jsx)("p",{className:"hidden sm:block font-semibold text-gray-700 text-sm mt-2",children:"MUSLIM SCHOOL, OYO"})]}),f.map(e=>(0,t.jsxs)("div",{className:"mb-6",children:[(0,t.jsx)("span",{className:"hidden lg:block text-gray-400 font-semibold text-xs uppercase",children:e.title}),(0,t.jsx)("div",{className:"flex flex-col gap-2",children:e.items.map(e=>l&&e.visible.includes(l)?(0,t.jsxs)(d.default,{href:e.href,className:`flex items-center gap-4 px-3 py-2 rounded-md transition duration-300 ${e.disabled?"pointer-events-none opacity-50":u===e.href?"bg-purple-300 text-purple-900 font-bold shadow-md":"hover:bg-purple-200 hover:text-purple-900"}`,children:[(0,t.jsx)(i.default,{src:e.icon,alt:e.label,width:20,height:20}),(0,t.jsx)("span",{className:"hidden lg:block",children:e.label})]},e.label):null)})]},e.title)),(0,t.jsxs)("button",{onClick:()=>{r({redirect:!1}),localStorage.removeItem("loggedUser"),o(null)},className:"flex items-center justify-between -mt-5 bg-pink-400 gap-4 px-3 py-2 rounded-md text-gray-700 hover:bg-red-200 hover:text-red-600 transition duration-300",children:[(0,t.jsx)(i.default,{src:"/logout.png",alt:"Logout",width:20,height:20}),(0,t.jsx)("span",{className:"hidden lg:block",children:"Logout"})]})]}):(0,t.jsx)("div",{className:"text-center py-4 text-gray-500",children:"Loading..."})}function o(){let{isLoaded:e,user:s}=(0,n.Jd)(),{signOut:r}=(0,n.ho)(),[a,d]=(0,c.useState)(null),[l,o]=(0,c.useState)(!1);if(!e)return(0,t.jsx)("div",{children:"Loading..."});let u=s?.username||"User";return(0,t.jsxs)("div",{className:"flex items-center justify-between p-3 bg-purple-300 ",children:[(0,t.jsxs)("div",{className:"hidden md:flex items-center gap-2 text-xs bg-white p-2 rounded-full ring-[1.5px] ring-grey-300",children:[(0,t.jsx)(i.default,{src:"/search.png",alt:"Search Icon",width:14,height:14}),(0,t.jsx)("input",{type:"text",placeholder:"Search...",className:"outline-none text-sm w-full placeholder-gray-500"})]}),(0,t.jsxs)("div",{className:"flex items-center justify-end gap-4",children:[(0,t.jsx)("div",{className:"bg-white rounded-full flex w-7 h-7 items-center justify-center cursor-pointer",children:(0,t.jsx)(i.default,{src:"/message.png",alt:"Messages",width:20,height:20})}),(0,t.jsxs)("div",{className:"bg-white rounded-full flex w-7 h-7 items-center justify-center cursor-pointer relative",children:[(0,t.jsx)(i.default,{src:"/announcement.png",alt:"Announcements",width:20,height:20}),(0,t.jsx)("div",{className:"absolute top-[-5px] right-[-5px] w-5 h-5 flex items-center justify-center bg-purple-500 text-white text-xs rounded-full z-10",children:"1"})]}),(0,t.jsxs)("div",{children:[(0,t.jsx)("p",{className:"text-xs leading-3 font-medium",children:u}),(0,t.jsx)("p",{className:"text-[10px] text-gray-500 text-right",children:a||"User"})]}),(0,t.jsx)(n.uF,{afterSignOutUrl:"/"})]})]})}function u({children:e}){return"/welcome"===(0,a.usePathname)()?(0,t.jsx)(t.Fragment,{children:e}):(0,t.jsxs)("div",{className:"flex h-screen",children:[(0,t.jsx)("div",{className:"w-[14%] md:w-[8%] lg:w-[16%] xl-w:[14%]",children:(0,t.jsx)(l,{})}),(0,t.jsxs)("div",{className:"w-[86%] md:w-[92%] lg:w-[84%] xl-w[86%] bg-purple-50 border border-red overflow-y-scroll flex flex-col",children:[(0,t.jsx)(o,{}),e]})]})}},39860:(e,s,r)=>{"use strict";r.r(s),r.d(s,{default:()=>t});let t=(0,r(46760).registerClientReference)(function(){throw Error("Attempted to call the default export of \"C:\\\\Users\\\\USER\\\\Documents\\\\Programing\\\\School Management System\\\\school\\\\src\\\\app\\\\(dashboard)\\\\layout.js\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"C:\\Users\\USER\\Documents\\Programing\\School Management System\\school\\src\\app\\(dashboard)\\layout.js","default")},5329:(e,s,r)=>{"use strict";r.d(s,{Ay:()=>E,Fb:()=>x,LP:()=>S,Sp:()=>p,VN:()=>m,Y0:()=>P,_d:()=>U,dp:()=>y,gN:()=>k,gg:()=>I,iQ:()=>v,ic:()=>T,jT:()=>g,jt:()=>f,jw:()=>j,kF:()=>N,oW:()=>M,qO:()=>D,qg:()=>b,s5:()=>w,vW:()=>o,wK:()=>F,wY:()=>u,yx:()=>h});var t,a=r(88977);r(98063);var n=r(89504),i=r(84574),d=r.n(i),c=r(61482),l=r(56215);async function o(e){return!e||isNaN(parseInt(e,10))?(console.warn("sessionId is missing or invalid in fetchGrades()"),[]):await d().grade.findMany({where:{sessionId:parseInt(e,10)},select:{id:!0,name:!0}})}async function u(e){if(!e||isNaN(parseInt(e,10)))return console.warn("⚠️ sessionId is missing or invalid in fetchTerms()"),[];try{return await d().term.findMany({where:{sessionId:parseInt(e,10),isCurrent:!0},select:{id:!0,name:!0,isCurrent:!0}})}catch(e){return console.error("❌ Error fetching terms:",e),[]}}async function f(e,s){return!e||isNaN(parseInt(e,10))?(console.warn("⚠️ sessionId is missing or invalid in fetchClasses()"),[]):!s||isNaN(parseInt(s,10))?(console.warn("⚠️ gradeId is missing or invalid in fetchClasses()"),[]):await d().class.findMany({where:{grade:{sessionId:parseInt(e,10),id:parseInt(s,10)}},select:{id:!0,name:!0,gradeId:!0,supervisor:{select:{id:!0,name:!0,surname:!0,username:!0,sex:!0}}}})}async function m(e,s,r){return e&&s&&r?await d().student.findMany({where:{sessionId:parseInt(e,10),gradeId:parseInt(s,10),classId:parseInt(r,10),isDeleted:!1},select:{id:!0,firstname:!0,surname:!0,admission:!0,phone:!0,address:!0,email:!0,img:!0,sex:!0,paymentStatus:!0,session:{select:{id:!0,name:!0}},term:{select:{id:!0,name:!0}},class:{select:{id:!0,name:!0}},grade:{select:{id:!0,name:!0}},subjects:{select:{subject:{select:{id:!0,name:!0}}}},createdAt:!0}}):(console.warn("⚠️ sessionId, gradeId, or classId is missing in fetchStudents()"),[])}async function h(){return await d().subject.findMany({select:{id:!0,name:!0}})}let g=async e=>{console.log(e);try{if((await n.$v.users.getUserList({emailAddress:[e.email],limit:1})).length>0)return console.error("Error: Email already in Clerk."),{success:!1,error:"A user with this email already exists."};let s=await n.$v.users.createUser({username:e.username,emailAddress:[e.email],password:e.password,publicMetadata:{role:"teacher"}}),r=await d().teacher.create({data:{id:s.id,surname:e.surname,name:e.name,username:e.username,phone:e.phone,img:e.img||null,email:e.email,sex:e.sex,address:e.address||null}});if(Array.isArray(e.subjects)&&e.subjects.length>0){let s=e.subjects.map(e=>({teacherId:r.id,subjectId:parseInt(e,10)}));await d().teacherSubject.createMany({data:s,skipDuplicates:!0})}else console.warn("No subjects provided.");return(0,c.revalidatePath)("/list/teachers"),(0,c.revalidatePath)("/list/classes"),{success:!0,message:"Teacher added successfully!"}}catch(e){if(422===e.status)return{success:!1,error:"Invalid user data. Check email, password, and username."};return{success:!1,error:"An unexpected error occurred."}}},p=async(e,s)=>{try{let r=await d().teacher.findUnique({where:{id:e}});if(!r)return{success:!1,error:"Teacher not found."};if(s.email!==r.email||s.username!==r.username){let r=await d().teacher.findFirst({where:{OR:[{email:s.email},{username:s.username}],NOT:{id:e}}});if(r){if(r.email===s.email)return{success:!1,error:"A teacher with this email already exists."};if(r.username===s.username)return{success:!1,error:"A teacher with this username already exists."}}}await n.$v.users.updateUser(e,{emailAddress:[s.email],username:s.username});let t=await d().teacher.update({where:{id:e},data:{surname:s.surname,name:s.name,username:s.username,email:s.email,sex:s.sex,address:s.address||null}});if(console.log("Teacher Updated:",t),Array.isArray(s.subjects)){if(console.log("Updating teacher subjects..."),await d().teacherSubject.deleteMany({where:{teacherId:e}}),s.subjects.length>0){let r=s.subjects.map(s=>({teacherId:e,subjectId:parseInt(s,10)}));await d().teacherSubject.createMany({data:r,skipDuplicates:!0}),console.log("Subjects Updated:",r)}else console.warn("No subjects provided.")}return(0,c.revalidatePath)("/list/teachers"),(0,c.revalidatePath)("/list/classes"),{success:!0,message:"Teacher updated successfully!"}}catch(e){return console.error("Error Updating Teacher:",e),{success:!1,error:"An unexpected error occurred."}}},b=async e=>{try{if(console.log(`Deleting Teacher ID: ${e}...`),!await d().teacher.findUnique({where:{id:e}}))return console.error("Error: Teacher Not Found."),{success:!1,error:"Teacher not found."};await d().teacher.update({where:{id:e},data:{isDeleted:!0,deletedAt:new Date}});try{await n.$v.users.deleteUser(e),console.log("Teacher deleted from Clerk.")}catch(e){return console.error("Error deleting Teacher from Clerk:",e),{success:!1,error:"Failed to delete Teacher from Clerk."}}return console.log("Teacher Soft Deleted Successfully."),{success:!0,message:"Teacher soft deleted successfully!"}}catch(e){return console.error("Error Soft Deleting Teacher:",e),{success:!1,error:"An unexpted error occurred."}}};async function w(e){console.log(e,"Student");try{let s,r,t;console.log("Checking if student exists in Clerk and Prisma...");let a=await d().student.findUnique({where:{admission:e.admission}});if(console.log("existingggggggggg",e.surname),a)return{success:!1,error:"Username is already taken."};console.log("Student does not exist. Continuing...");let i=parseInt(e.sessionId,10),l=parseInt(e.gradeId,10),o=parseInt(e.classId,10),u=parseInt(e.termId,10),[f,m,h,g]=await Promise.all([d().session.findUnique({where:{id:i}}),d().grade.findUnique({where:{id:l}}),d().class.findUnique({where:{id:o}}),d().term.findUnique({where:{id:u}})]);if(!f)return{success:!1,error:"Invalid session selected."};if(!m)return{success:!1,error:"Invalid grade selected."};if(!h)return{success:!1,error:"Invalid class selected."};if(!g)return{success:!1,error:"Invalid term selected."};if(console.log("Validating subjects..."),!Array.isArray(e.subjects)||0===e.subjects.length)return{success:!1,error:"At least one subject must be selected."};if((await d().subject.findMany({where:{id:{in:e.subjects.map(e=>parseInt(e,10))}},select:{id:!0}})).map(e=>e.id).length!==e.subjects.length)return{success:!1,error:"One or more selected subjects are invalid."};let p=(s=e.surname,r=e.firstname,s+r),b=(t=e.admission,"Mcco-"+t);console.log("Generated password:",p);let w={firstName:e.firstname,surname:e.surname,username:b,password:p.toUpperCase(),publicMetadata:{role:"student"}};e.email&&(w.emailAddress=e.email.trim()),console.log("Student Data for Clerk:",w);let y=await n.$v.users.createUser(w);console.log("Clerk User Created:",y);let S=await d().student.create({data:{id:y.id,surname:e.surname,firstname:e.firstname,admission:e.admission,phone:e.phone,sex:e.sex.toUpperCase(),img:e.img||null,address:e.address||null,sessionId:i,gradeId:l,classId:o,termId:u}});if(Array.isArray(e.subjects)&&e.subjects.length>0){let s=e.subjects.map(e=>({studentId:S.id,subjectId:parseInt(e,10)}));await d().studentSubject.createMany({data:s,skipDuplicates:!0})}return(0,c.revalidatePath)("/list/students"),{success:!0,message:"Student created successfully!"}}catch(e){if(console.error("Full error:",e),e?.error?.errors)return console.error("Clerk Validation Errors:",JSON.stringify(e.error.errors,null,2)),{success:!1,error:e.error.errors[0].message};return{success:!1,error:e.message||"An unexpected error occurred"}}}let y=async(e,s)=>{console.log(s,"updateStudent");try{let r;if(console.log("Checking if student exists in Clerk and Prisma..."),!await d().student.findUnique({where:{id:e}}))return{success:!1,error:"Student not found."};if(console.log("Checking if the student exists in Clerk..."),!await n.$v.users.getUser(e))return{success:!1,error:"Student not found in Clerk."};console.log("Student exists. Continuing...");let t=parseInt(s.sessionId,10),a=parseInt(s.gradeId,10),i=parseInt(s.classId,10),c=parseInt(s.termId,10),[l,o,u,f]=await Promise.all([d().session.findUnique({where:{id:t}}),d().grade.findUnique({where:{id:a}}),d().class.findUnique({where:{id:i}}),d().term.findUnique({where:{id:c}})]);if(!l)return{success:!1,error:"Invalid session selected."};if(!o)return{success:!1,error:"Invalid grade selected."};if(!u)return{success:!1,error:"Invalid class selected."};if(!f)return{success:!1,error:"Invalid term selected."};if(console.log("Validating subjects..."),!Array.isArray(s.subjects)||0===s.subjects.length)return{success:!1,error:"At least one subject must be selected."};if((await d().subject.findMany({where:{id:{in:s.subjects.map(e=>parseInt(e,10))}},select:{id:!0}})).map(e=>e.id).length!==s.subjects.length)return{success:!1,error:"One or more selected subjects are invalid."};let m={username:(r=s.admission,"mcco-"+r),emailAddress:s.email?s.email.trim():void 0};console.log("Updating Clerk User:",m);let h=await n.$v.users.updateUser(e,m);console.log("Clerk User Updated:",h);let g=await d().student.update({where:{id:e},data:{surname:s.surname,firstname:s.firstname,admission:s.admission,phone:s.phone,sex:s.sex.toUpperCase(),img:s.img||null,address:s.address||null,sessionId:t,gradeId:a,classId:i,termId:c,paymentStatus:s.paymentStatus}});if(Array.isArray(s.subjects)&&s.subjects.length>0){await d().studentSubject.deleteMany({where:{studentId:e}});let r=s.subjects.map(e=>({studentId:g.id,subjectId:parseInt(e,10)}));await d().studentSubject.createMany({data:r,skipDuplicates:!0})}return{success:!0,message:"Student updated successfully!"}}catch(e){if(console.error("Full error:",e),e?.error?.errors)return console.error("Clerk Validation Errors:",JSON.stringify(e.error.errors,null,2)),{success:!1,error:e.error.errors[0].message};return{success:!1,error:e.message||"An unexpected error occurred"}}},S=async e=>{try{if(!await d().student.findUnique({where:{id:e}}))return{success:!1,error:"Teacher not found."};await d().student.update({where:{id:e},data:{isDeleted:!0,deletedAt:new Date}});try{await n.$v.users.deleteUser(e)}catch(e){return{success:!1,error:"Failed to delete student from Clerk."}}return{success:!0,message:"student soft deleted successfully!"}}catch(e){return{success:!1,error:"An unexpted error occurred."}}},x=async e=>{try{if(await d().subject.findUnique({where:{name:e.name.trim()}}))return{success:!1,error:"Subject already added."};return await d().subject.create({data:{name:e.name.trim()}}),(0,c.revalidatePath)("/list/teachers"),(0,c.revalidatePath)("/list/classes"),(0,c.revalidatePath)("/list/resultoverview"),(0,c.revalidatePath)("/list/students"),{success:!0,message:"Subject created successfully!"}}catch(e){return{success:!1,error:"An unexpected error occurred while creating the subject."}}},v=async(e,s)=>{try{return await d().subject.update({where:{id:e},data:{name:s.name}}),(0,c.revalidatePath)("/list/subjects"),{success:!0}}catch(e){if("P2002"===e.code)return{success:!1,error:"Subject already exists."};return{success:!1,error:"An unexpected error occurred."}}},I=async e=>{try{if(!await d().subject.findUnique({where:{id:e}}))return{success:!1,error:"Subject not found."};return await d().subject.update({where:{id:e},data:{isDeleted:!0,deletedAt:new Date}}),revalidateTag("subjects"),{success:!0}}catch(e){return{success:!1,error:"An unexpected error occurred."}}};async function j(e){try{if(!e||"string"!=typeof e||""===e.trim())return{success:!1,message:"Invalid session name."};if(await d().session.findFirst({where:{name:e.trim()}}))return{success:!1,message:"Session already exists."};let s=await d().session.findFirst({where:{isCurrent:!0}});if(s){let e=await d().term.findFirst({where:{sessionId:s.id,isCurrent:!0}});if(e&&(console.log("\uD83D\uDCCC Last active term:",e.name),"Third Term"===e.name)){let r=await d().student.findMany({where:{sessionId:s.id,isDeleted:!1},select:{id:!0,paymentStatus:!0}});if(r.length>0){let t=r.map(r=>({studentId:r.id,sessionId:s.id,termId:e.id,status:r.paymentStatus}));await d().paymentHistory.createMany({data:t})}}await d().session.update({where:{id:s.id},data:{isCurrent:!1}}),await d().term.updateMany({where:{sessionId:s.id},data:{isCurrent:!1}})}let r=await d().session.create({data:{name:e.trim(),isCurrent:!0,isDeleted:!1}});if(!r?.id)return{success:!1,message:"Failed to create a new session."};for(let e of(await d().term.createMany({data:["First Term","Second Term","Third Term"].map((e,s)=>({name:e,sessionId:r.id,isCurrent:0===s,isDeleted:!1}))}),["JSS1","JSS2","JSS3","SSS1","SSS2","SSS3"])){let s=await d().grade.create({data:{name:e,sessionId:r.id}}),t=[{name:`${e} A`,gradeId:s.id},{name:`${e} B`,gradeId:s.id}];e.startsWith("SSS")&&t.push({name:`${e} C`,gradeId:s.id}),await d().class.createMany({data:t})}if(s?.id){let e=await C(s.id,r.id);e.success||console.log("Error handling promotion:",e.message)}return(0,c.revalidatePath)("/list/classes"),(0,c.revalidatePath)("/list/resultoverview"),(0,c.revalidatePath)("/list/teachers"),(0,c.revalidatePath)("/list/students"),{success:!0,message:"Session created successfully!",session:r}}catch(e){return{success:!1,message:"An error occurred while creating the session."}}}let A={JSS1A:"JSS2A",JSS1B:"JSS2B",JSS2A:"JSS3A",JSS2B:"JSS3B",JSS3A:null,JSS3B:null,SSS1A:"SSS2A",SSS1B:"SSS2B",SSS1C:"SSS2C",SSS2A:"SSS3A",SSS2B:"SSS3B",SSS2C:"SSS3C"};async function C(e,s){try{let r=await d().session.findUnique({where:{id:s},select:{id:!0,grades:{select:{id:!0,name:!0,classes:{select:{id:!0,name:!0}}}}}});if(!r)return{success:!1,message:"No active session found."};let t=await d().term.findFirst({where:{isCurrent:!0,sessionId:s},select:{id:!0}});if(!t)return{success:!1,message:"❌ No current term found for the new session."};let a=t.id,n={},i={};r.grades.forEach(e=>{e.classes.forEach(s=>{let r=s.name.replace(/\s+/g,"").toUpperCase();n[r]=s.id,i[r]=e.id})});let c=await d().classRecord.findMany({where:{sessionId:e,promotion:{in:["PROMOTED","REPEATED"]}},select:{studentId:!0,class:{select:{name:!0,id:!0}},preferredClass:!0,promotion:!0}});if(0===c.length)return{success:!1,message:"No students found for promotion or repetition."};let l=c.map(async r=>{let t=r.studentId,c=r.class?.name?.replace(/\s+/g,"").toUpperCase(),l=await d().classRecord.findFirst({where:{studentId:t,sessionId:e},select:{classId:!0,id:!0}});if(!l)return null;let o=await d().class.findUnique({where:{id:l.classId},select:{gradeId:!0}});if(!o)return null;if(console.log(`📌 Student ${t}: ${r.promotion}`),await d().studentHistory.create({data:{studentId:t,sessionId:e,classId:l.classId,gradeId:o.gradeId,classRecordId:l.id}}),"REPEATED"===r.promotion){let e=n[c],r=i[c];return e&&r?await d().student.update({where:{id:t},data:{classId:e,sessionId:s,gradeId:r,termId:a}}):null}if("PROMOTED"===r.promotion){let e,l;if(c.startsWith("JSS3")){let s=r.preferredClass?.replace(/\s+/g,"").toUpperCase();if(!s)return console.warn(`⚠️ Student ${t} has no preferred class. Manual selection required.`),null;if(e=n[s],l=i[s],!e||!l)return console.error(`❌ Preferred class ${s} not found for student ${t}.`),null}else{let s=A[c];if(!s||(e=n[s.replace(/\s+/g,"").toUpperCase()],l=i[s.replace(/\s+/g,"").toUpperCase()],!e||!l))return null}return console.log(`✅ Promoting Student ${t} to Class ID: ${e}`),d().student.update({where:{id:t},data:{classId:e,sessionId:s,gradeId:l,termId:a}})}return null}),o=await Promise.all(l.filter(Boolean));return{success:!0,message:"Students promoted and repeated successfully",updatedStudents:o}}catch(e){return{success:!1,message:"Error occurred while moving students"}}}async function U({classId:e,teacherId:s}){try{if(!e||!s)return{success:!1,error:"Missing required fields"};let r=Number(e);return await d().$transaction(async e=>{let t=await e.class.findUnique({where:{id:r},include:{grade:{include:{session:!0}}}});if(!t)throw Error("Class not found");let a=t.grade.sessionId;if(await e.class.findFirst({where:{grade:{sessionId:a},supervisorId:s,NOT:{id:r}}}))throw Error("This teacher is already assigned to another class in this session.");await e.class.update({where:{id:r},data:{supervisorId:s}})}),console.log("✅ Teacher assigned successfully"),(0,c.revalidatePath)("/list/classes"),{success:!0,message:"Teacher assigned successfully"}}catch(e){return console.error("❌ Error:",e.message),{success:!1,error:e.message||"Internal Server Error"}}}let N=async e=>{try{if(!Array.isArray(e)||0===e.length)return{success:!1,error:"❌ No results provided."};let{sessionId:s,termId:r,gradeId:t,classId:a,subjectId:n}=e[0];if(!s||!r||!t||!a||!n)return{success:!1,error:"❌ Missing required fields."};if(await d().result.findFirst({where:{sessionId:s,termId:r,gradeId:t,classId:a,subjectId:n}}))return{success:!1,error:"❌ This class already has submitted results."};let i=e.map(e=>e.studentId&&e.teacherId&&e.firstAssessment&&e.secondAssessment&&e.examScore?{studentId:e.studentId,teacherId:e.teacherId,subjectId:n,termId:r,sessionId:s,gradeId:t,classId:a,firstAssessment:parseFloat(e.firstAssessment),secondAssessment:parseFloat(e.secondAssessment),examScore:parseFloat(e.examScore),totalScore:parseFloat(e.firstAssessment)+parseFloat(e.secondAssessment)+parseFloat(e.examScore)}:null).filter(Boolean);if(0===i.length)return{success:!1,error:"❌ Some results are invalid. Fix them before submission."};return await d().result.createMany({data:i}),{success:!0}}catch(e){return console.error("❌ Error creating results:",e),{success:!1,error:"❌ An unexpected error occurred."}}},P=async e=>{console.log("\uD83D\uDE80 Incoming Records:",JSON.stringify(e,null,2));try{if(!Array.isArray(e)||0===e.length)return{success:!1,error:"❌ No valid record provided."};let{sessionId:s,termId:r,classId:t,teacherId:a}=e[0];if(!s||!r||!t||!a)return{success:!1,error:"❌ Missing required fields: sessionId, termId, classId, or teacherId."};let n=await d().term.findUnique({where:{id:r}});if(!n)return{success:!1,error:"❌ Term not found."};let i=n.name;if(await d().classRecord.findFirst({where:{sessionId:s,termId:r,classId:t,teacherId:a}}))return console.log("❌ Class record already exists."),{success:!1,error:"❌ This class already has submitted records for this term."};let c=e.map((e,a)=>{let n;if(!e.studentId||!e.teacherId||!e.remark)return console.warn(`⚠️ Skipping invalid record at index ${a}:`,e),null;let d=e.preferredClass?.toUpperCase()||null;return"Third Term"===i&&("PROMOTED"===e.promotion?n="PROMOTED":"REPEATED"===e.promotion&&(n="REPEATED")),console.log(n),console.log(i),console.log("\uD83D\uDE80 Incoming Record:",JSON.stringify(e,null,2)),console.log("\uD83D\uDD0D Processed Preferred Class:",d),{studentId:e.studentId,teacherId:e.teacherId,termId:r,sessionId:s,classId:t,remark:e.remark||"N/A",position:parseInt(e.position,10)||null,promotion:n,preferredClass:d}}).filter(Boolean);if(console.log("\uD83D\uDCBE Saving Class Records:",JSON.stringify(c,null,2)),await d().classRecord.createMany({data:c,skipDuplicates:!0}),"Third Term"===i){console.log("\uD83D\uDD04 Marking students for promotion...");let e=c.filter(e=>"PROMOTED"===e.promotion);console.log(e)}return{success:!0,message:"✅ Class records saved successfully!"}}catch(e){return console.error("❌ Error saving class record:",e.message),{success:!1,error:"❌ An unexpected error occurred."}}};async function M(){try{let e=await d().result.findMany({include:{student:{select:{id:!0,firstname:!0,surname:!0,grade:{select:{id:!0,name:!0}}}},subject:{select:{id:!0,name:!0}},term:{select:{id:!0,name:!0}}}});return{success:!0,data:e}}catch(e){return console.error("❌ Error Fetching Results:",e),{success:!1,error:"Failed to fetch results"}}}let T=async e=>{try{if((await n.$v.users.getUserList({emailAddress:[e.email],limit:1})).length>0)return console.error("Error: Email already in Clerk."),{success:!1,error:"A user with this email already exists."};let s=await n.$v.users.createUser({username:e.username,emailAddress:[e.email],password:e.password,publicMetadata:{role:"admin"}});return await d().admin.create({data:{id:s.id,surname:e.surname,name:e.name,username:e.username,phone:e.phone,img:e.img||null,email:e.email,password:e.password,sex:e.sex,address:e.address||null}}),(0,c.revalidatePath)("/list/admin"),{success:!0,message:"Admin added successfully!"}}catch(e){if(console.error("Error Creating Admin:",e),422===e.status)return{success:!1,error:"Invalid user data. Check email, password, and username."};return{success:!1,error:"An unexpected error occurred."}}},E=t=async()=>{};async function k(e,s){console.log("\uD83D\uDD04 Updating term status",{termId:e,sessionId:s});try{if(!e||!s)return{success:!1,message:"Invalid term selection."};let r=await d().term.findFirst({where:{sessionId:s,isCurrent:!0}});if(!r||!r.id)return console.error("❌ No last active term found."),{success:!1,message:"No previous term found."};let t=await d().student.findMany({where:{sessionId:s,isDeleted:!1},select:{id:!0,paymentStatus:!0}});if(0===t.length)return{success:!1,message:"No students found for this session."};let a=await d().paymentHistory.findMany({where:{sessionId:s,termId:r.id},select:{studentId:!0}}),n=new Set(a.map(e=>e.studentId)),i=t.filter(e=>!n.has(e.id)).map(e=>({studentId:e.id,sessionId:s,termId:r.id,status:e.paymentStatus}));if(i.length>0)try{await d().paymentHistory.createMany({data:i})}catch(e){console.error("❌ Error saving payment history:",e)}return await d().term.updateMany({where:{sessionId:s},data:{isCurrent:!1}}),await d().term.update({where:{id:e},data:{isCurrent:!0}}),{success:!0,message:"Term updated successfully. Admin will handle student updates."}}catch(e){return console.error("❌ Error updating term status:",e),{success:!1,message:"An error occurred while updating the term."}}}Object.defineProperty(t,"name",{value:"default",writable:!1});let D=async(e,s)=>{try{if(!e||!s.trim())return{success:!1,message:"Invalid session ID or name."};if(!await d().session.findUnique({where:{id:e}}))return{success:!1,message:"Session not found."};if(await d().session.findFirst({where:{name:s.trim()}}))return{success:!1,message:"Session name already exists."};let r=await d().session.update({where:{id:e},data:{name:s.trim()}});return(0,c.revalidatePath)("/list/settings"),(0,c.revalidatePath)("/list/classes"),(0,c.revalidatePath)("/list/resultoverview"),(0,c.revalidatePath)("/list/teachers"),(0,c.revalidatePath)("/list/students"),{success:!0,message:"Session updated successfully!",session:r}}catch(e){return{success:!1,message:"An error occurred while updating the session."}}},F=async({studentId:e,sessionId:s,termId:r,newStatus:t})=>{console.log(e,"1",s,"2",r,"3",t,"4");try{if(!e||!s||!r||!t)return{success:!1,message:"Missing required parameters"};let a=await d().paymentHistory.findFirst({where:{studentId:e,sessionId:s,termId:r}});if(!a)return{success:!1,message:"Payment record not found"};let n=await d().paymentHistory.update({where:{id:a.id},data:{status:t}});return{success:!0,message:"Payment status updated successfully",data:n}}catch(e){return{success:!1,message:e.message}}};(0,l.D)([o,u,f,m,h,g,p,b,w,y,S,x,v,I,j,U,N,P,M,T,t,k,D,F]),(0,a.A)(o,"40475b2b8f8319b0846edf5c7cb5e1e728a1089951",null),(0,a.A)(u,"40ed930b2f4f73b84615356d6006f79094f1b36d34",null),(0,a.A)(f,"6036f28e7ac49e3d154e7ccf564ded12524660b7a3",null),(0,a.A)(m,"7012297d5ec348708a0d112445212707293bf72b0d",null),(0,a.A)(h,"00a96e2edde344d9ac979e6224ec262b65891d79ef",null),(0,a.A)(g,"7ff9f4b3c0899f1ff57e9b8920f38fba9736beb4d9",null),(0,a.A)(p,"7f83a0c169bd936e319b22b5fb8e983c6a78b17519",null),(0,a.A)(b,"7ffbcf8ec68b2cfdb180be3e72c5e455ffa9f249ff",null),(0,a.A)(w,"40b804325dd837dc8c225457a67854434aaf6ebee4",null),(0,a.A)(y,"7fdcbf60fca3f5b6a285da04b3b6d998b7fb8009f3",null),(0,a.A)(S,"7f2303b054e6e0cb315ec5c1d9aa5d52ec27c8241d",null),(0,a.A)(x,"7ff0ad8b0367d26620e1348595599f94b06fd8d743",null),(0,a.A)(v,"7f313469743f7fd3702663b6525ad8630a911241aa",null),(0,a.A)(I,"7fe1331afc087c56e2cdd1483c6d40ec0634d1df29",null),(0,a.A)(j,"40e0f7ef960141ba12217c8aeb1b723184849cd36c",null),(0,a.A)(U,"4058ec963f03d2831514d001901310ff848301da6d",null),(0,a.A)(N,"7f85d83ea367df124ae45e8b7f053eb5c3e03cbbd4",null),(0,a.A)(P,"7fa0377689c74330a9ea93934256badf544a99e045",null),(0,a.A)(M,"003f34873f588014a711f06dc57354ba553990c3e4",null),(0,a.A)(T,"7f8c1ef6216c7eb27919a081231b2719bd1cbd49b7",null),(0,a.A)(t,"006339254bbfc4b9b56acd90be012a79cae9236911",null),(0,a.A)(k,"6071083769d2f147cdb51e2883975c0db04b0b8539",null),(0,a.A)(D,"7f1eb12a3ad3fca310f6993f174cc939657ac976b3",null),(0,a.A)(F,"7f0ddba15a4d1a2b5818152aedeee1babfecfaf880",null)},84574:(e,s,r)=>{"use strict";let t;let{PrismaClient:a}=r(96330);t=new a,e.exports=t},70440:(e,s,r)=>{"use strict";r.r(s),r.d(s,{default:()=>a});var t=r(88077);let a=async e=>[{type:"image/x-icon",sizes:"16x16",url:(0,t.fillMetadataSegment)(".",await e.params,"favicon.ico")+""}]}};